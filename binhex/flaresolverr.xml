<?xml version="1.0" encoding="utf-8"?>
<Containers>
  <TemplateURL>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/flaresolverr.xml</TemplateURL>
  <Beta>False</Beta>
  <Category>Downloaders: MediaApp:Video</Category>
  <Name>binhex-flaresolverr</Name>
  <Description>
    [b]Description[/b][br]
    FlareSolverr starts a proxy server, and it waits for user requests in an idle state using few resources. When some request arrives, it uses Selenium with the undetected-chromedriver to create a web browser (Chrome). It opens the URL with user parameters and waits until the Cloudflare challenge is solved (or timeout). The HTML code and the cookies are sent back to the user, and those cookies can be used to bypass Cloudflare using other HTTP clients.[br][br]
    [b]Configuration[/b][br]
    [b]/config[/b] This is where the application will store its configuration files, database and logs etc.[br]
    [b]Documentation[/b][br]
    https://github.com/binhex/documentation[br][br]
  </Description>
  <Overview>
    FlareSolverr starts a proxy server, and it waits for user requests in an idle state using few resources. When some request arrives, it uses Selenium with the undetected-chromedriver to create a web browser (Chrome). It opens the URL with user parameters and waits until the Cloudflare challenge is solved (or timeout). The HTML code and the cookies are sent back to the user, and those cookies can be used to bypass Cloudflare using other HTTP clients.
  </Overview>
  <Support>https://forums.unraid.net/topic/155853-support-binhex-flaresolverr/</Support>
  <ReadMe>https://github.com/binhex/documentation</ReadMe>
  <Registry>https://registry.hub.docker.com/r/binhex/arch-flaresolverr/</Registry>
  <GitHub>https://github.com/binhex/arch-flaresolverr</GitHub>
  <Repository>binhex/arch-flaresolverr</Repository>
  <Project>https://github.com/Flaresolverr/Flaresolverr</Project>
  <BindTime>true</BindTime>
  <Privileged>false</Privileged>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>8191</HostPort>
        <ContainerPort>8191</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Environment>
    <Variable>
      <Name>UMASK</Name>
      <Value>000</Value>
    </Variable>
    <Variable>
      <Name>PUID</Name>
      <Value>99</Value>
    </Variable>
    <Variable>
      <Name>PGID</Name>
      <Value>100</Value>
    </Variable>
  </Environment>
  <Data>
    <Volume>
      <HostDir>/mnt/user/appdata/config</HostDir>
      <ContainerDir>/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <WebUI>http://[IP]:[PORT:8191]/v1</WebUI>
  <Icon>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/flaresolverr-icon.png</Icon>
  <DonateText>If you appreciate my work, then please consider buying me a beer :D</DonateText>
  <DonateLink>https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=MM5E27UX6AUU4</DonateLink>
  <DonateImg>https://www.paypal.com/en_US/i/btn/btn_donate_SM.gif</DonateImg>
  <ExtraParams></ExtraParams>
</Containers>
